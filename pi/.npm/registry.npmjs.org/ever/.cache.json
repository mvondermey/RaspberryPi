{"_id":"ever","_rev":"12-865399e332555bd7dbd9d993e7f06543","name":"ever","description":"dom events with a node-style EventEmitter api","dist-tags":{"latest":"0.0.3"},"versions":{"0.0.0":{"name":"ever","version":"0.0.0","description":"dom events with a node-style EventEmitter api","main":"index.js","directories":{"example":"example"},"repository":{"type":"git","url":"git://github.com/substack/ever.git"},"homepage":"https://github.com/substack/ever","keywords":["events","dom","browser","browserify","emitter"],"author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"license":"MIT","readme":"","_id":"ever@0.0.0","dist":{"shasum":"e49ce48739947fb3010398db8143dd726fbd2781","tarball":"https://registry.npmjs.org/ever/-/ever-0.0.0.tgz"},"maintainers":[{"name":"substack","email":"mail@substack.net"}]},"0.0.1":{"name":"ever","version":"0.0.1","description":"dom events with a node-style EventEmitter api","main":"index.js","directories":{"example":"example"},"repository":{"type":"git","url":"git://github.com/substack/ever.git"},"homepage":"https://github.com/substack/ever","keywords":["events","dom","browser","browserify","emitter"],"devDependencies":{"tape":"~0.1.5"},"testling":{"files":"test/*.js","browsers":["ie8","ie9","chrome/10","chrome/20","firefox/5","firefox/15","safari/5.1","opera/12"]},"author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"license":"MIT","readme":"# ever\n\n[dom events](http://www.w3.org/TR/DOM-Level-2-Events/events.html)\nwith a node-style\n[EventEmitter](http://nodejs.org/docs/latest/api/events.html#events_class_events_eventemitter)\napi\n\n[![browser support](http://ci.testling.com/substack/ever.png)](http://ci.testling.com/substack/ever)\n\n# example\n\n[view the demo](http://substack.net/projects/ever-example/)\n\n``` js\nvar ever = require('ever');\nvar box = document.querySelector('#box');\n\nvar state = false;\never(box).on('click', function (ev) {\n    ev.stopPropagation();\n    state = !state;\n    box.style['background-color'] = state ? 'red' : 'rgb(127,127,127)';\n});\n\nsetInterval(function () {\n    ever(box).emit('click');\n}, 3000);\n```\n\n# methods\n\n``` js\nvar ever = require('ever')\n```\n\n## var ev = ever(element)\n\nReturn a new\n[EventEmitter](http://nodejs.org/docs/latest/api/events.html#events_class_events_eventemitter)\nthat wraps the HTML node `element`.\n\nAll the usual\n[EventEmitter](http://nodejs.org/docs/latest/api/events.html#events_class_events_eventemitter)\nmethods should work with the caveat that adding and removing listeners are\nproxied through to the underlying dom methods, which only expect a single event\nobject as a parameter.\n\n## ev.emit(name, opts)\n\nEmit an event `name` with options `opts`. This method creates a synthetic event\nusing `document.createEvent()` and the corresponding variant of `.initEvent()`\nthat works with the event `name` provided.\n\nThe options `opts` will be passed into the matching `.initEvent()` function\nsignature. Any additional properties will be added to the event object as\nproperties being calling `.dispatchEvent()`.\n\nThe signatures are documented in the file `init.json` in this distribution.\nTo see which event name maps to which init signature, see the `types.json` file.\n\n## ev.on(name, cb), ev.addListener(name, cb)\n\nJust like node's `EventEmitter.prototype.on()`, listen for events.\n\nInternally this calls `.addEventListener()`.\n\n## ev.removeListener(name, cb)\n\nJust like node's `EventEmitter.prototype.removeListener()`, remove a listener.\n\nInternally this calls `.removeEventListener()`, however there is no way to\nobtain a list of all listeners from dom nodes, so only listeners registered by\nthe current `ever()` instance can be removed.\n\n## ev.removeAllListeners(name)\n\nJust like node `EventEmitter.prototype.removeAllListeners()`, remove all the\nlisteners with `name` or everything is `name` is falsy.\n\nUnlike in node, this function calls `removeListener()` on each of the events to\nremove them so that the underlying `.removeEventListener()` calls get fired.\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install ever\n```\n\nThis module is meant for use in browsers with a node-style module system.\nUse [browserify](http://github.com/substack/node-browserify) or similar.\n\n# license\n\nMIT\n","_id":"ever@0.0.1","dist":{"shasum":"eae5dacaae769fc6951907989dfab2cb9dffd83a","tarball":"https://registry.npmjs.org/ever/-/ever-0.0.1.tgz"},"_npmVersion":"1.1.59","_npmUser":{"name":"substack","email":"mail@substack.net"},"maintainers":[{"name":"substack","email":"mail@substack.net"}]},"0.0.2":{"name":"ever","version":"0.0.2","description":"dom events with a node-style EventEmitter api","main":"index.js","directories":{"example":"example"},"repository":{"type":"git","url":"git://github.com/substack/ever.git"},"homepage":"https://github.com/substack/ever","keywords":["events","dom","browser","browserify","emitter"],"devDependencies":{"tape":"~0.1.5"},"testling":{"files":"test/*.js","browsers":["ie8","ie9","chrome/10","chrome/20","firefox/5","firefox/15","safari/5.1","opera/12"]},"author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"license":"MIT","readme":"# ever\n\n[dom events](http://www.w3.org/TR/DOM-Level-2-Events/events.html)\nwith a node-style\n[EventEmitter](http://nodejs.org/docs/latest/api/events.html#events_class_events_eventemitter)\napi\n\n[![browser support](http://ci.testling.com/substack/ever.png)](http://ci.testling.com/substack/ever)\n\n# example\n\n[view the demo](http://substack.net/projects/ever-example/)\n\n``` js\nvar ever = require('ever');\nvar box = document.querySelector('#box');\n\nvar state = false;\never(box).on('click', function (ev) {\n    ev.stopPropagation();\n    state = !state;\n    box.style['background-color'] = state ? 'red' : 'rgb(127,127,127)';\n});\n\nsetInterval(function () {\n    ever(box).emit('click');\n}, 3000);\n```\n\n# methods\n\n``` js\nvar ever = require('ever')\n```\n\n## var ev = ever(element)\n\nReturn a new\n[EventEmitter](http://nodejs.org/docs/latest/api/events.html#events_class_events_eventemitter)\nthat wraps the HTML node `element`.\n\nAll the usual\n[EventEmitter](http://nodejs.org/docs/latest/api/events.html#events_class_events_eventemitter)\nmethods should work with the caveat that adding and removing listeners are\nproxied through to the underlying dom methods, which only expect a single event\nobject as a parameter.\n\n## ev.emit(name, opts)\n\nEmit an event `name` with options `opts`. This method creates a synthetic event\nusing `document.createEvent()` and the corresponding variant of `.initEvent()`\nthat works with the event `name` provided.\n\nThe options `opts` will be passed into the matching `.initEvent()` function\nsignature. Any additional properties will be added to the event object as\nproperties being calling `.dispatchEvent()`.\n\nThe signatures are documented in the file `init.json` in this distribution.\nTo see which event name maps to which init signature, see the `types.json` file.\n\n## ev.on(name, cb), ev.addListener(name, cb)\n\nJust like node's `EventEmitter.prototype.on()`, listen for events.\n\nInternally this calls `.addEventListener()`.\n\n## ev.removeListener(name, cb)\n\nJust like node's `EventEmitter.prototype.removeListener()`, remove a listener.\n\nInternally this calls `.removeEventListener()`, however there is no way to\nobtain a list of all listeners from dom nodes, so only listeners registered by\nthe current `ever()` instance can be removed.\n\n## ev.removeAllListeners(name)\n\nJust like node `EventEmitter.prototype.removeAllListeners()`, remove all the\nlisteners with `name` or everything is `name` is falsy.\n\nUnlike in node, this function calls `removeListener()` on each of the events to\nremove them so that the underlying `.removeEventListener()` calls get fired.\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install ever\n```\n\nThis module is meant for use in browsers with a node-style module system.\nUse [browserify](http://github.com/substack/node-browserify) or similar.\n\n# license\n\nMIT\n","readmeFilename":"readme.markdown","_id":"ever@0.0.2","dist":{"shasum":"1b49359aee2a1bd5e8cd183c3f2bc159e01ea5e2","tarball":"https://registry.npmjs.org/ever/-/ever-0.0.2.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"substack","email":"mail@substack.net"},"maintainers":[{"name":"substack","email":"mail@substack.net"}]},"0.0.3":{"name":"ever","version":"0.0.3","description":"dom events with a node-style EventEmitter api","main":"index.js","directories":{"example":"example"},"repository":{"type":"git","url":"git://github.com/substack/ever.git"},"homepage":"https://github.com/substack/ever","keywords":["events","dom","browser","browserify","emitter"],"devDependencies":{"tape":"~0.1.5"},"testling":{"files":"test/*.js","browsers":["ie8","ie9","chrome/10","chrome/20","firefox/5","firefox/15","safari/5.1","opera/12"]},"author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"license":"MIT","readme":"# ever\n\n[dom events](http://www.w3.org/TR/DOM-Level-2-Events/events.html)\nwith a node-style\n[EventEmitter](http://nodejs.org/docs/latest/api/events.html#events_class_events_eventemitter)\napi\n\n[![browser support](http://ci.testling.com/substack/ever.png)](http://ci.testling.com/substack/ever)\n\n# example\n\n[view the demo](http://substack.net/projects/ever-example/)\n\n``` js\nvar ever = require('ever');\nvar box = document.querySelector('#box');\n\nvar state = false;\never(box).on('click', function (ev) {\n    ev.stopPropagation();\n    state = !state;\n    box.style['background-color'] = state ? 'red' : 'rgb(127,127,127)';\n});\n\nsetInterval(function () {\n    ever(box).emit('click');\n}, 3000);\n```\n\n# methods\n\n``` js\nvar ever = require('ever')\n```\n\n## var ev = ever(element)\n\nReturn a new\n[EventEmitter](http://nodejs.org/docs/latest/api/events.html#events_class_events_eventemitter)\nthat wraps the HTML node `element`.\n\nAll the usual\n[EventEmitter](http://nodejs.org/docs/latest/api/events.html#events_class_events_eventemitter)\nmethods should work with the caveat that adding and removing listeners are\nproxied through to the underlying dom methods, which only expect a single event\nobject as a parameter.\n\n## ev.emit(name, opts)\n\nEmit an event `name` with options `opts`. This method creates a synthetic event\nusing `document.createEvent()` and the corresponding variant of `.initEvent()`\nthat works with the event `name` provided.\n\nThe options `opts` will be passed into the matching `.initEvent()` function\nsignature. Any additional properties will be added to the event object as\nproperties being calling `.dispatchEvent()`.\n\nThe signatures are documented in the file `init.json` in this distribution.\nTo see which event name maps to which init signature, see the `types.json` file.\n\n## ev.on(name, cb), ev.addListener(name, cb)\n\nJust like node's `EventEmitter.prototype.on()`, listen for events.\n\nInternally this calls `.addEventListener()`.\n\n## ev.removeListener(name, cb)\n\nJust like node's `EventEmitter.prototype.removeListener()`, remove a listener.\n\nInternally this calls `.removeEventListener()`, however there is no way to\nobtain a list of all listeners from dom nodes, so only listeners registered by\nthe current `ever()` instance can be removed.\n\n## ev.removeAllListeners(name)\n\nJust like node `EventEmitter.prototype.removeAllListeners()`, remove all the\nlisteners with `name` or everything is `name` is falsy.\n\nUnlike in node, this function calls `removeListener()` on each of the events to\nremove them so that the underlying `.removeEventListener()` calls get fired.\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install ever\n```\n\nThis module is meant for use in browsers with a node-style module system.\nUse [browserify](http://github.com/substack/node-browserify) or similar.\n\n# license\n\nMIT\n","readmeFilename":"readme.markdown","_id":"ever@0.0.3","dist":{"shasum":"cea46ca55f5999b4bbbd3bfc75e261d703c61543","tarball":"https://registry.npmjs.org/ever/-/ever-0.0.3.tgz"},"_from":".","_npmVersion":"1.2.2","_npmUser":{"name":"substack","email":"mail@substack.net"},"maintainers":[{"name":"substack","email":"mail@substack.net"}]}},"readme":"","maintainers":[{"name":"substack","email":"mail@substack.net"}],"time":{"modified":"2013-04-25T20:24:22.525Z","created":"2012-08-28T01:02:11.453Z","0.0.0":"2012-08-28T01:02:12.869Z","0.0.1":"2012-12-23T08:30:12.240Z","0.0.2":"2013-02-22T22:11:22.914Z","0.0.3":"2013-02-23T22:03:09.194Z"},"author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"repository":{"type":"git","url":"git://github.com/substack/ever.git"},"users":{"xian":true,"quarterto":true,"davidchase":true},"_attachments":{},"_etag":"W/\"517990f6-3283\""}